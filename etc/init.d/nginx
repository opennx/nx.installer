#!/bin/sh

### BEGIN INIT INFO
# Provides:           nginx
# Required-Start:     $local_fs $remote_fs $network $syslog $named
# Required-Stop:      $local_fs $remote_fs $network $syslog $named
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  nginx LSB init script
# Description:        nginx Linux Standards Base compliant init script.
### END INIT INFO


# Load the LSB log_* functions.
. /lib/lsb/init-functions

# The name of the daemon.
BASEPATH="/opt/nginx"
NAME="nginx"

# Absolute path to the PID file.
PIDFILE="${BASEPATH}/logs/${NAME}.pid"
DAEMON="${BASEPATH}/sbin/${NAME}" 

# Check return status of EVERY command
set -e

# This script is only accessible for root (sudo).
if [ "$(id -u)" -ne 0 ]
then
    log_failure_msg "super user only!"
    exit 1
fi



reload_service()
{
  "${DAEMON}" -s reload
}


start_service()
{
  "${DAEMON}"
}


stop_service()
{
  "${DAEMON}" -s quit
}



case "${1}" in

  force-reload|reload)
    if [ ! -f ${PIDFILE} ];
    then
      log_failure_msg "${NAME}" "not running"
    else
      log_daemon_msg "${NAME}" "reloading configuration"
      reload_service || log_end_msg 1
      log_end_msg 0
    fi
  ;;

  restart)
    if [ ! -f ${PIDFILE} ];
    then
      log_failure_msg "${NAME}" "not running"
    else
      log_daemon_msg "${NAME}" "restarting"
      stop_service || log_end_msg 1
      sleep 0.1
      start_service || log_end_msg 1
      log_end_msg 0
    fi
  ;;

  start)
    if [ -f ${PIDFILE} ];
    then
      log_success_msg "${NAME}" "already started"
    else
      log_daemon_msg "${NAME}" "starting"
      start_service || log_end_msg 1
      log_end_msg 0
    fi
  ;;

  status)
    status_of_proc "${DAEMON}" "${NAME}" && exit 0 || exit "${?}"
  ;;

  stop)
    if [ ! -f ${PIDFILE} ];
    then
      log_success_msg "${NAME}" "already stopped"
    else
      log_daemon_msg "${NAME}" "stopping"
      stop_service && log_end_msg 0 || log_end_msg 1
    fi
  ;;

  *)
    printf "Usage: %s {force-reload|reload|restart|start|status|stop}\n" "${NAME}" >&2
    exit 1
  ;;

esac

exit 0
